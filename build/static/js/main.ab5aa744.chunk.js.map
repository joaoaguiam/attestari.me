{"version":3,"sources":["components/ipfs/ipfs-upload/IpfsUpload.js","routes.js","store/web3/actionTypes.js","store/web3/reducer.js","components/Header.js","store/web3/actions.js","store/3box/actionTypes.js","store/3box/reducer.js","store/global-app/actionTypes.js","store/global-app/actions.js","store/3box/actions.js","modules/firebase.js","components/OpenSkill.js","components/MySkills.js","components/Profile.js","components/LoadingDialog.js","store/global-app/reducer.js","components/CenteredContainer.js","components/Attest.js","components/AcceptAttestation.js","components/PublicProfile.js","App.js","serviceWorker.js","index.js","helpers/utils.js","helpers/ipfs/ipfs.js"],"names":["IpfsUpload","props","_this","Object","_Users_joaoaguiam_Documents_Joao2017_Dev_attestari_me_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_joaoaguiam_Documents_Joao2017_Dev_attestari_me_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_joaoaguiam_Documents_Joao2017_Dev_attestari_me_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","convertToBuffer","_ref","_Users_joaoaguiam_Documents_Joao2017_Dev_attestari_me_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_joaoaguiam_Documents_Joao2017_Dev_attestari_me_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","reader","buffer","wrap","_context","prev","next","console","log","Buffer","from","result","sent","setState","stop","_x","apply","arguments","captureFile","bind","_Users_joaoaguiam_Documents_Joao2017_Dev_attestari_me_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","uploadFile","state","url","undefined","ipfsHash","status","fileName","value","placeholder","event","_this2","stopPropagation","preventDefault","file","target","files","window","FileReader","name","readAsArrayBuffer","onloadend","_callee2","_context2","_this3","ipfs","getIpfs","add","err","hash","getIpfsUrl","fileUploadedCB","uploading","caption","classes","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","accept","className","input","id","multiple","type","onChange","htmlFor","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","item","wrapper","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_11___default","component","button","disabled","size","buttonProgress","Component","withStyles","theme","margin","spacing","unit","display","position","top","left","marginTop","marginLeft","routes","HOME","PROFILE","ATTEST","ACCEPT_ATTESTATION","PUBLIC_PROFILE","address","length","concat","ACCOUNT_CHANGED","ACCOUNTS_LOADED","NETWORK_CHANGED","BALANCE_UPDATED","WEB3_LOCKED","WEB3_UNLOCKED","WEB3_INSTALLED","TX_STATUS_UPDATED","RESET_LAST_TX","initialState","Immutable","accounts","selectedAccount","networkId","balance","web3kLocked","web3Installed","lastTransation","web3Provider","reduce","action","types","merge","isLocked","txHash","txStatus","getSelectedAccount","web3","getWeb3Provider","currentProvider","verifySigner","asyncToGenerator","regenerator_default","message","signature","signer","signingAddress","Web3","providers","WebsocketProvider","eth","recover","abrupt","toUpperCase","t0","_x2","_x3","withRouter","connect","web3Address","web3Selectors","root","flexGrow","grow","menuButton","marginRight","react_default","AppBar_default","Toolbar_default","Typography_default","variant","color","align","Button_default","Link","to","fetchAccounts","dispatch","getAccounts","getBalance","balanceBigNumber","Number","fetchNetwork","initWeb3","getState","libraryInitialized","publicConfigStore","on","error","LOADED_3BOX","SKILLS_UPDATED","ATTESTATIONS_UPDATED","PENDING_ATTESTATIONS_UPDATED","PUBLIC_PROFILE_LOADED","isLoaded","email","avatar","skills","attestations","pendingAttestations","publicProfile","is3BoxLoaded","profile3Box","get3BoxProfile","_state$profile3Box","get3BoxPublicProfile","SET_LOADING","UNSET_LOADING","setLoading","unsetLoading","_ref2","_x4","box","load3box","globalAppActions","ThreeBox","openBox","public","get","private","_ref4","_callee4","_context4","Error","_x7","_x8","update3BoxProfile","profile3BoxSelectors","set","update3BoxSkills","_ref3","_callee3","_context3","_x5","_x6","update3BoxAttestations","_ref6","_callee6","_context6","_x11","_x12","update3BoxPendingAttestations","_ref8","_callee8","_context8","_x15","_x16","load3BoxPublicProfile","userAddress","_ref9","_callee9","_context9","getProfile","_x17","_x18","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","pushNode","rootPosition","database","ref","push","key","writeNode","jsonObject","child","addPendingAttestation","requestorAddress","requestorName","requestorEmail","attestatorEmail","skillName","skillTimeStamp","skillSignature","pendingAttestation","timeStamp","Date","getTime","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","_x9","_x10","addApprovedAttestation","attestorName","attestorAddress","attestationSignature","requesterName","attestation","_x13","_x14","_x19","OpenSkill","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","handleChange","defineProperty","openSnackbar","snackbarMessage","snackbarOpenState","closeSnackbar","addAttestor","newPendingAttestations","_","cloneDeep","skill","deleteSkillDialogState","deleteSkillEntity","_this$props","Fragment","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","IconButton_default","aria-label","close","onClick","Close_default","mainContainer","index_es","gutterBottom","requestAttestationContainer","TextField_default","autoFocus","label","width","requestAttestationEmail","mini","Send_default","propsSkills","centerContainer","textAlign","padding","textField","profileValue","palette","text","secondary","paddingLeft","rightContainer","avatarContainer","height","dividerContainer","paddingTop","paddingBottom","drawerPaper","mySkillsContainer","addSkillButton","right","containerWhite","backgroundColor","marginBottom","containerPadding","paddingRight","addressContainer","overflowX","table","minWidth","rightIcon","MySkills","addSkill","_this$state","addSkillName","newSkills","findIndex","addSkillError","signMessage","clone","moment","valueOf","addSkillDialogState","openAddSkillDialog","closeAddSkillDialog","openDeleteDialog","closeDeleteDialog","openSkillDialog","openSkillDialogState","skillOpened","closeSkillDialog","deleteSkill","_this$state2","foundIndex","splice","deletedSkillName","skillOpenedName","skillOpenedTimeStamp","fromNow","classnames","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","fullWidth","DialogActions_default","gutterbottom","skillDialog","components_OpenSkill","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","map","numAttestations","keys","scope","Tooltip_default","title","Share_default","Delete_default","Add_default","openSkillContainer","Profile","load3Box","handleAvatarUploaded","propsName","propsEmail","propsAvatar","hasChanged","Grid_default","container","justify","Avatar_default","alt","src","noValidate","autoComplete","components_MySkills","LoadingDialog","disableBackdropClick","disableEscapeKeyDown","progress","isLoading","CenteredContainer","xs","children","footer","greenText","_mainContainer","maxWidth","breakpoints","down","up","primary","main","Attest","match","params","approveAttestation","_this$props$match$par","decodeURIComponent","isCompleted","_this$props$match$par2","textSecondary","href","wordWrap","AcceptAttestation","isValidSignature","addAttestation","newAttestations","acceptedDate","_this$props$match$par3","_this$props$publicPro","values","createMuiTheme","overrides","MuiTableCell","App","BrowserRouter","core_styles","components_LoadingDialog","components_Header","components_CenteredContainer","Route","exact","path","PublicProfile","globalApp","globalAppSelectors","Boolean","location","hostname","store","createStore","combineReducers","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","d","__webpack_exports__","toString","Promise","resolve","reject","sendAsync","IPFS","require","host","port","protocol","IPFS_PROTOCOL"],"mappings":"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","file":"static/js/main.ab5aa744.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { getIpfsUrl, getIpfs } from '../../../helpers/ipfs/ipfs';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress, Grid } from '@material-ui/core';\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n        // width: 150,\n    },\n    input: {\n        display: 'none',\n    },\n    wrapper: {\n        // margin: theme.spacing.unit,\n        position: 'relative',\n        // width: 200,\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n});\n\nclass IpfsUpload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.captureFile = this.captureFile.bind(this);\n        this.convertToBuffer = this.convertToBuffer.bind(this);\n        this.uploadFile = this.uploadFile.bind(this);\n\n\n        this.state = {\n            url: '',\n            buffer: undefined,\n            ipfsHash: undefined,\n            status: undefined,\n            fileName: this.props.value === '' ? this.props.placeholder : this.props.value\n        }\n    }\n\n    captureFile(event) {\n        console.log('on captureFile');\n        event.stopPropagation()\n        event.preventDefault()\n        const file = event.target.files[0]\n        console.log(file);\n        let reader = new window.FileReader()\n        this.setState({ fileName: file.name });\n        reader.readAsArrayBuffer(file)\n        reader.onloadend = async () => {\n            await this.convertToBuffer(reader);\n            this.uploadFile();\n\n        };\n    };\n\n    convertToBuffer = async (reader) => {\n        console.log('on convertToBuffer');\n        //file is converted to a buffer to prepare for uploading to IPFS\n        const buffer = await Buffer.from(reader.result);\n        console.log(buffer);\n        //set this buffer -using es6 syntax\n        await this.setState({ buffer: buffer });\n        console.log(\"finished convertToBuffer\")\n    };\n\n    uploadFile() {\n        // event.preventDefault();\n        console.log(\"on uploadFile\");\n        let ipfs = getIpfs();\n        console.log(ipfs);\n        console.log(this.state);\n        this.setState({ status: 'UPLOADING' });\n        //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n        ipfs.add(this.state.buffer, (err, ipfsHash) => {\n            console.log(err, ipfsHash);\n            //setState by setting ipfsHash to ipfsHash[0].hash \n            let hash = ipfsHash[0].hash;\n            let url = getIpfsUrl(hash);\n            this.setState({\n                hash: hash,\n                url: url,\n                status: 'UPLOADED'\n            });\n            this.props.fileUploadedCB(url, hash);\n        })\n    };\n\n    render() {\n        // let uploadDisabled = this.state.buffer === undefined ? 'disabled' : '';\n        let uploading = this.state.status === 'UPLOADING';\n        // let uploaded = this.state.status === 'UPLOADED';\n        // let buttonLabel = uploading ? \"Uploading...\" : \"Upload to IPFS\";\n        // let status = uploaded ? \" File successfully uploaded to IPFS\" : '';\n        let caption = this.props.caption ? this.props.caption : 'Select File';\n        let classes = this.props.classes;\n        return (\n            // <div className=\"ipfs-upload-container\">\n            //     <input className=\"form-control-file\" type=\"file\" onChange={this.captureFile} />\n            //     <button type=\"button\" className=\"btn btn-secondary \" onClick={this.uploadFile} disabled={uploadDisabled} >{buttonLabel}</button>\n            //     {status !== '' &&\n            //         <div><small><i className='fas fa-check success-icon'></i>{status}</small></div>\n            //     }\n            //     {/* {uploading && <center><small><i className=\"fas fa-spinner fa-pulse\"></i> Uploading to IPFS...</small></center>} */}\n            // </div>\n            <div>\n                <input\n                    accept=\"image/*\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={this.captureFile}\n                />\n                <label htmlFor=\"contained-button-file\">\n                    <Grid item className={classes.wrapper}>\n                        <Button component=\"span\" className={classes.button} disabled={uploading}>{caption}</Button>\n                        {uploading && <CircularProgress size={24} className={classes.buttonProgress} />}\n                    </Grid>\n                </label>\n            </div>\n\n        )\n    }\n}\n\nIpfsUpload.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IpfsUpload);","\n\nexport default {\n  HOME: () => '/',\n  PROFILE: () => '/profile',\n  ATTEST: () => '/attest/:requestorAddress/:skillName/:skillTimeStamp/:skillSignature/:attestatorEmail/:requestorEmail',\n  ACCEPT_ATTESTATION: () => '/acceptAttestation/:requestorAddress/:skillName/:skillTimeStamp/:attestationSignature/:attestorAddress/:timeStamp/:requesterName',\n  PUBLIC_PROFILE: (address = ':address') => `/publicProfile/${address}`,\n\n\n};\n","export const ACCOUNT_CHANGED = 'web3.ACCOUNT_CHANGED';\nexport const ACCOUNTS_LOADED = 'web3.ACCOUNTS_LOADED';\nexport const NETWORK_CHANGED = 'web3.NETWORK_CHANGED';\nexport const BALANCE_UPDATED = 'web3.BALANCE_UPDATED';\nexport const WEB3_LOCKED = 'web3.WEB3_LOCKED';\nexport const WEB3_UNLOCKED = 'web3.WEB3_UNLOCKED';\nexport const WEB3_INSTALLED = 'web3.WEB3_INSTALLED';\n\nexport const TX_STATUS_UPDATED = 'web3.TX_STATUS_UPDATED';\nexport const RESET_LAST_TX = 'web3.RESET_LAST_TX';\n\n\n","// import _ from 'lodash';\nimport * as types from './actionTypes';\nimport Immutable from 'seamless-immutable';\nimport Web3 from 'web3';\n\nconst initialState = Immutable({\n    accounts: [],\n    selectedAccount: undefined,\n    networkId: -1,\n    balance: undefined,\n    web3kLocked: true,\n    web3Installed: false,\n    lastTransation: undefined,\n    web3Provider: undefined\n});\n\nexport const TX_STATUS = {\n    DRAFT: 0,\n    SUBMITTED: 1,\n    WAITING_MINING: 2,\n    MINED: 3,\n    FAILED: 4\n}\n\nexport default function reduce(state = initialState, action = {}) {\n    switch (action.type) {\n        case types.ACCOUNTS_LOADED:\n            return state.merge({\n                accounts: action.accounts\n            });\n        case types.ACCOUNT_CHANGED:\n            return state.merge({\n                selectedAccount: action.selectedAccount,\n                isLocked: action.selectedAccount !== undefined\n            });\n        case types.NETWORK_CHANGED:\n            return state.merge({\n                networkId: action.networkId\n            });\n        case types.BALANCE_UPDATED:\n            return state.merge({\n                balance: action.balance\n            });\n        case types.WEB3_LOCKED:\n            return state.merge({\n                web3kLocked: true,\n            });\n        case types.WEB3_UNLOCKED:\n            return state.merge({\n                web3kLocked: false,\n            });\n        case types.WEB3_INSTALLED:\n            return state.merge({\n                web3Installed: true,\n            });\n        case types.TX_STATUS_UPDATED:\n            return state.merge({\n                lastTransation: {\n                    txHash: action.txHash,\n                    txStatus: action.txStatus\n                }\n            })\n        case types.RESET_LAST_TX:\n            return state.merge({\n                lastTransation: undefined\n            })\n        default:\n            return state;\n    }\n}\nexport function getWeb3(state) {\n    return state.web3.web3;\n}\nexport function isLibraryInitialized(state) {\n    return state.web3.libraryInitialized;\n}\nexport function getSelectedAccount(state) {\n    return state.web3.selectedAccount;\n}\nexport function getBalance(state) {\n    return state.web3.balance;\n}\nexport function isWeb3Locked(state) {\n    return state.web3.web3kLocked;\n}\nexport function isWeb3Installed(state) {\n    return state.web3.web3Installed;\n}\nexport function getNetworkId(state) {\n    return state.web3.networkId;\n}\nexport function getLastTransaction(state) {\n    return state.web3.lastTransation;\n}\nexport function getWeb3Provider() {\n    return window.web3.currentProvider\n}\n\nexport function toEther(weiAmount) {\n    if (window.web3) {\n        return window.web3.fromWei(weiAmount, 'ether');\n    }\n    return -1;\n}\n\nexport function toWei(etherAmount) {\n    if (window.web3) {\n        return window.web3.toWei(etherAmount, 'ether');\n    }\n    return -1;\n}\n\nexport function getNetworkLabel(networkId) {\n    switch (Number(networkId)) {\n        case 1:\n            return 'MAINNET';\n        case 2:\n            return 'MORDEN';\n        case 3:\n            return 'ROPSTEN';\n        case 4:\n            return 'RINKEBY';\n        case 42:\n            return 'KOVAN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n\nexport function getEtherScanLinkAddress(networkId, address) {\n    switch (Number(networkId)) {\n        case 1:\n            return `https://etherscan.io/address/${address}`;\n        case 2:\n            return '#';\n        case 3:\n            return `https://ropsten.etherscan.io/address/${address}`;\n        case 4:\n            return `https://rinkeby.etherscan.io/address/${address}`;\n        case 42:\n            return `https://kovan.etherscan.io/address/${address}`;\n        default:\n            return '#';\n    }\n}\n\nexport const verifySigner = async (message, signature, signer) => {\n    try {\n        let web3 = new Web3(new Web3.providers.WebsocketProvider('wss://mainnet.infura.io/ws'));\n        const signingAddress = await web3.eth.accounts.recover(message, signature);\n        return signingAddress.toUpperCase() === signer.toUpperCase();\n    }\n    catch (error) {\n        return false;\n    }\n    // window.web3.personal.ecRecover(message, signature, function (error, result) {\n    //     if (!error)\n    //         console.log(result)\n    //     else\n    //         console.error(error);\n    // })\n\n    // return;\n    // // window.web3.personal.ecRecover(message, signature, function (error, result) {\n    // //     console.log(result);\n    // //     debugger;\n    // // });\n    // var msg = '0x' + Buffer.from(message, 'utf8').toString('hex')\n\n    // // let r = utils.toBuffer(signature.slice(0, 64))\n    // // let s = utils.toBuffer('0x' + signature.slice(64, 128))\n    // // let v = utils.toBuffer('0x' + signature.slice(128, 130)+27)\n    // // // let m = utils.toBuffer(message)\n    // // let pub = utils.ecrecover(msg, v, r, s)\n    // // let adr = '0x' + utils.pubToAddress(pub).toString('hex')\n\n\n    // var messageBuffer = new Buffer(msg, 'hex');\n    // // console.log('message: ', message);\n    // signature = signature.split('x')[1];\n\n    // var r = new Buffer(signature.substring(0, 64), 'hex')\n    // var s = new Buffer(signature.substring(64, 128), 'hex')\n    // var v = new Buffer((parseInt(signature.substring(128, 130)) + 27).toString());\n\n    // // r = utils.toBuffer(sgn.slice(0,66))\n    // // s = utils.toBuffer('0x' + sgn.slice(66,130))\n    // // v = utils.toBuffer('0x' + sgn.slice(130,132))\n    // // m = utils.toBuffer(msg)\n    // // pub = utils.ecrecover(m, v, r, s)\n    // // adr = '0x' + utils.pubToAddress(pub).toString('hex')\n\n    // // console.log('r s v: ', r, s , v)\n\n    // // console.log('v: ', v)\n\n    // var pub = utils.ecrecover(messageBuffer, v, r, s);\n\n    // var adr = '0x' + utils.pubToAddress(pub).toString('hex')\n\n    // console.log('recoveredAddress: ', signingAddress);\n    // console.log('signer: ', signer);\n    // // return (signingAddress === signer);\n}\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport routes from '../routes';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as web3Selectors from '../store/web3/reducer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nfunction Header(props) {\r\n  const { classes, web3Address } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                        <MenuIcon />\r\n                    </IconButton> */}\r\n          <Typography variant=\"title\" color=\"inherit\" align=\"left\" className={classes.grow}>\r\n            Attestari.me\r\n                    </Typography>\r\n          <Button color=\"inherit\" component={Link} to={routes.PROFILE()}>My Profile</Button>\r\n          <Button color=\"inherit\" component={Link} to={routes.PUBLIC_PROFILE(web3Address)}>My Public Profile</Button>\r\n\r\n          {/* <Button color=\"inherit\">Button2</Button>\r\n                    <Button color=\"inherit\">Button3</Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    web3Address: web3Selectors.getSelectedAccount(state),\r\n  };\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(Header)));\r\n","// import Web3 from 'web3';\nimport * as types from './actionTypes';\nimport * as web3Selectors from './reducer';\n\nconst fetchAccounts = dispatch => {\n  window.web3.eth.getAccounts((err, accounts) => {\n    if (err) {\n      console.log(err);\n      dispatch({ type: types.ACCOUNTS_LOADED, accounts: [] });\n    } else {\n      if (accounts) {\n        let selectedAccount = accounts.length > 0 ? accounts[0] : undefined;\n\n        dispatch({ type: types.ACCOUNTS_LOADED, accounts });\n        dispatch({ type: types.ACCOUNT_CHANGED, selectedAccount });\n        if (selectedAccount) {\n          dispatch({ type: types.WEB3_UNLOCKED });\n          window.web3.eth.getBalance(selectedAccount, (err, balanceBigNumber) => {\n            const balance = Number(balanceBigNumber);\n            dispatch({ type: types.BALANCE_UPDATED, balance });\n          });\n\n        }\n        else {\n          dispatch({ type: types.WEB3_LOCKED });\n        }\n      }\n      else {\n        dispatch({ type: types.ACCOUNTS_LOADED, accounts: [] });\n        dispatch({ type: types.WEB3_LOCKED });\n      }\n    }\n  });\n}\n\nconst fetchNetwork = dispatch => {\n  // window.web3.version.getNetwork((err, networkId) => {\n  //   if (err) {\n  //     console.log(err);\n  //     dispatch({ type: types.NETWORK_CHANGED, networkId: -1 });\n  //     debugger;\n  //   } else {\n  //     dispatch({ type: types.NETWORK_CHANGED, networkId });\n  //   }\n  // });\n}\n\nexport function initWeb3() {\n  return async (dispatch, getState) => {\n    try {\n\n      if (window.web3) {\n        // window.web3 = new Web3(window.web3.currentProvider);\n        if (!web3Selectors.isLibraryInitialized(getState())) {\n          fetchAccounts(dispatch);\n          fetchNetwork(dispatch);\n          dispatch({ type: types.WEB3_INSTALLED });\n\n          window.web3.currentProvider.publicConfigStore.on('update', () => {\n            fetchAccounts(dispatch);\n            fetchNetwork(dispatch);\n          });\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nexport function resetLastTransaction() {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.RESET_LAST_TX });\n  };\n}\n\nexport const updateTxStatus = (txHash, txStatus) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.TX_STATUS_UPDATED, txHash, txStatus });\n  };\n}\n\n","export const LOADED_3BOX = '3box.LOADED_3BOX';\nexport const SKILLS_UPDATED = '3box.SKILLS_UPDATED';\nexport const ATTESTATIONS_UPDATED = '3box.ATTESTATIONS_UPDATED';\nexport const PENDING_ATTESTATIONS_UPDATED = '3box.PENDING_ATTESTATIONS_UPDATED';\nexport const PUBLIC_PROFILE_LOADED = '3box.PUBLIC_PROFILE_LOADED';\n\n\n\n","import * as types from './actionTypes';\nimport Immutable from 'seamless-immutable';\n\n\n\nlet initialState = Immutable({\n  isLoaded: false,\n  address: '',\n  name: '',\n  email: '',\n  avatar: '',\n  // isLoaded: true,\n  // address: \"0xa265c90b5a2757ae15a07008f69b168a70691c42\",\n  // name: \"Joao Aguiam\",\n  // email: \"joaoaguiam@gmail.com\",\n  // avatar: \"https://ipfs.infura.io/ipfs/QmXW5YqFB3juXno5iMVFcQtc4F3pGAGbT6BhMNmzAbfsy7\",\n  skills: [],\n  attestations: {},\n  pendingAttestations: {},\n  publicProfile: {\n    name: '',\n    attestations: {},\n    skills: {}\n  }\n});\n\nexport default function reduce(state = initialState, action = {}) {\n  switch (action.type) {\n    case types.LOADED_3BOX:\n\n      return state.merge({\n        name: action.name,\n        email: action.email,\n        avatar: action.avatar,\n        address: action.address,\n        skills: action.skills,\n        attestations: action.attestations,\n        pendingAttestations: action.pendingAttestations,\n        isLoaded: true\n      });\n\n    case types.SKILLS_UPDATED:\n      return state.merge({\n        skills: action.skills,\n      });\n    case types.ATTESTATIONS_UPDATED:\n      return state.merge({\n        attestations: action.attestations,\n      });\n    case types.PUBLIC_PROFILE_LOADED:\n      return state.merge({\n        publicProfile: action.publicProfile,\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function is3BoxLoaded(state) {\n  return state.profile3Box.isLoaded;\n}\n\nexport function get3BoxProfile(state) {\n  const { name, email, avatar, skills, address, attestations, pendingAttestations } = state.profile3Box;\n  return {\n    name,\n    email,\n    avatar,\n    skills,\n    address,\n    attestations,\n    pendingAttestations\n  }\n};\nexport function get3BoxPublicProfile(state) {\n  return state.profile3Box.publicProfile;\n}\n","export const SET_LOADING = 'globalApp.SET_LOADING';\nexport const UNSET_LOADING = 'globalApp.UNSET_LOADING';\n\n","import * as types from './actionTypes';\n\nexport function setLoading() {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.SET_LOADING });\n  };\n}\nexport function unsetLoading() {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.UNSET_LOADING });\n  };\n}","import * as types from './actionTypes';\nimport ThreeBox from '3box';\nimport * as web3Selectors from '../web3/reducer';\nimport * as profile3BoxSelectors from '../3box/reducer';\nimport * as globalAppActions from '../global-app/actions';\n\nlet box = undefined;\n\nexport function load3box(address) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(globalAppActions.setLoading());\n      box = await ThreeBox.openBox(address, web3Selectors.getWeb3Provider());\n      let name = await box.public.get('name');\n      let email = await box.private.get('email');\n      let avatar = await box.public.get('avatar');\n      let skills = await box.public.get('attestari.skills');\n      let attestations = await box.public.get('attestari.attestations');\n      let pendingAttestations = await box.private.get('attestari.pendingAttestations');\n\n\n      name = name ? name : '';\n      email = email ? email : '';\n      avatar = avatar ? avatar : '';\n      skills = skills ? skills : [];\n      attestations = attestations ? attestations : {};\n      pendingAttestations = pendingAttestations ? pendingAttestations : {};\n\n      dispatch({ type: types.LOADED_3BOX, name, email, avatar, skills, address, attestations, pendingAttestations });\n      dispatch(load3BoxSkills());\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function update3BoxProfile(name, email, avatar) {\n  return async (dispatch, getState) => {\n    try {\n      // debugger;\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      const address = profile3BoxSelectors.get3BoxProfile(getState()).address;\n      await box.public.set('name', name);\n      await box.public.set('avatar', avatar);\n      await box.private.set('email', email);\n      dispatch({ type: types.LOADED_3BOX, name, email, avatar, address });\n\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function update3BoxSkills(skills) {\n  return async (dispatch, getState) => {\n    try {\n\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      await box.public.set('attestari.skills', skills);\n      dispatch({ type: types.SKILLS_UPDATED, skills });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\n\nexport function load3BoxSkills() {\n  return async (dispatch, getState) => {\n    try {\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      let skills = await box.public.get('attestari.skills');\n      if (!skills) {\n        skills = [];\n      }\n      dispatch({ type: types.SKILLS_UPDATED, skills });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function load3BoxAttestations() {\n  return async (dispatch, getState) => {\n    try {\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      let attestations = await box.public.get('attestari.attestations');\n      if (!attestations) {\n        attestations = {};\n      }\n      dispatch({ type: types.ATTESTATIONS_UPDATED, attestations });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\nexport function update3BoxAttestations(attestations) {\n  return async (dispatch, getState) => {\n    try {\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      await box.public.set('attestari.attestations', attestations);\n      dispatch({ type: types.ATTESTATIONS_UPDATED, attestations });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\n\nexport function load3BoxPendingAttestations() {\n  return async (dispatch, getState) => {\n    try {\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      let pendingAttestations = await box.private.get('attestari.pendingAttestations');\n      if (!pendingAttestations) {\n        pendingAttestations = {};\n      }\n      dispatch({ type: types.PENDING_ATTESTATIONS_UPDATED, pendingAttestations });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\nexport function update3BoxPendingAttestations(pendingAttestations) {\n  return async (dispatch, getState) => {\n    try {\n      if (box === undefined) {\n        throw new Error(\"No 3Box available\");\n      }\n      dispatch(globalAppActions.setLoading());\n      await box.private.set('attestari.pendingAttestations', pendingAttestations);\n      dispatch({ type: types.PENDING_ATTESTATIONS_UPDATED, pendingAttestations });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function load3BoxPublicProfile(userAddress) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(globalAppActions.setLoading());\n      const publicProfile = await ThreeBox.getProfile(userAddress);\n      dispatch({ type: types.PUBLIC_PROFILE_LOADED, publicProfile });\n      dispatch(globalAppActions.unsetLoading());\n    } catch (error) {\n      dispatch(globalAppActions.unsetLoading());\n\n      // throw error;\n    }\n  };\n}","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/functions';\nimport 'firebase/auth';\n\n// Initialize Firebase\nconst config = {\n  dev: {\n    apiKey: 'AIzaSyAzRXSUXMud6Oto1-ISsUiGMdun5slDG3U',\n    authDomain: 'att-net.firebaseapp.com',\n    databaseURL: 'https://att-net.firebaseio.com',\n    projectId: 'att-net',\n    storageBucket: 'att-net.appspot.com',\n    messagingSenderId: '817008533355'\n  }\n};\n\n\n/* ------------- Instanciate DB ------------------ */\nfirebase.initializeApp(config.dev);\n\n/* ------------- Base code ------------------ */\nconst pushNode = rootPosition => {\n  try {\n    const database = firebase.database();\n    const ref = database.ref(rootPosition);\n    var newNodeRef = ref.push();\n    return newNodeRef.key;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst writeNode = async (rootPosition, key, jsonObject) => {\n  try {\n    const database = firebase.database();\n    const ref = database.ref(rootPosition);\n    await ref.child(key).set(jsonObject, error => {\n      if (error) {\n        console.log(error);\n      } else {\n        // do nothing on success\n      }\n    });\n  } catch (error) {\n    throw error;\n  }\n};\n\n// const deleteNode = async (rootPosition, key) => {\n//   try {\n//     const database = firebase.database();\n//     const ref = database.ref(rootPosition);\n//     await ref.child(key).remove(error => {\n//       if (error) {\n//         console.log(error);\n//       } else {\n//         // do nothing on success\n//       }\n//     });\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// const updateNode = async (rootPosition, key, jsonObject) => {\n//   try {\n//     const database = firebase.database();\n//     const ref = database.ref(rootPosition);\n//     await ref.child(key).update(jsonObject, error => {\n//       if (error) {\n//         console.log(error);\n//       } else {\n//         // do nothing on success\n//       }\n//     });\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// const nodeExists = async (rootPosition, key) => {\n//   try {\n//     const database = firebase.database();\n//     const dataSnapshot = await database.ref(rootPosition).once('value');\n//     return dataSnapshot.child(key).exists();\n//   } catch (error) {\n//     return false;\n//   }\n// };\n\n/* ------------- Business logic ------------------ */\n\nconst addPendingAttestation = async (requestorAddress, requestorName, requestorEmail, attestatorEmail, skillName, skillTimeStamp, skillSignature) => {\n  try {\n    const rootPosition = `/pendingAttestations`;\n    let key = await pushNode(rootPosition);\n\n    let pendingAttestation = {\n      requestorAddress,\n      requestorName,\n      requestorEmail,\n      attestatorEmail,\n      skillName,\n      skillTimeStamp,\n      skillSignature,\n      key,\n      timeStamp: new Date().getTime()\n    }\n    await writeNode(rootPosition, key, pendingAttestation);\n\n\n    await fetch('https://us-central1-attestari-dev.cloudfunctions.net/sendAttestationEmail', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(\n        pendingAttestation\n      )\n    })\n\n    return pendingAttestation;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\nconst addApprovedAttestation = async (skillName, skillTimeStamp, attestorName, attestorAddress, requestorAddress, requestorEmail, timeStamp, attestationSignature, requesterName) => {\n  try {\n\n    let attestation = {\n      skillName, skillTimeStamp, attestorName, attestorAddress, timeStamp, attestationSignature, requestorAddress, requestorEmail, requesterName\n    }\n\n\n    await fetch('https://us-central1-attestari-dev.cloudfunctions.net/sendApprovedAttestationEmail', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(\n        attestation\n      )\n    })\n    debugger;\n    return attestation;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  addPendingAttestation,\n  addApprovedAttestation\n};\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport * as web3Selectors from '../store/web3/reducer';\nimport * as profile3BoxSelectors from '../store/3box/reducer';\nimport { update3BoxPendingAttestations } from '../store/3box/actions';\nimport TextField from '@material-ui/core/TextField';\nimport _ from 'lodash'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport SendIcon from '@material-ui/icons/Send';\nimport { addPendingAttestation } from '../modules/firebase';\n\nconst styles = theme => ({\n  centerContainer: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n  },\n  textField: {\n    width: '100%'\n  },\n  profileValue: {\n    color: theme.palette.text.secondary,\n    paddingLeft: theme.spacing.unit,\n  },\n  rightContainer: {\n    textAlign: 'right'\n  },\n  avatarContainer: {\n    display: 'flex',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n\n  },\n  dividerContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 180,\n  },\n  mySkillsContainer: {\n    position: 'relative',\n  },\n  addSkillButton: {\n    position: 'absolute',\n    top: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  containerWhite: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  containerPadding: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n  },\n  addressContainer: {\n    width: 300\n  },\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 640,\n  },\n  mainContainer: {\n    marginTop: theme.spacing.unit * 2,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  requestAttestationContainer: {\n    display: 'flex'\n  },\n  requestAttestationEmail: {\n    width: 400\n  }\n});\n\n\n\nclass OpenSkill extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      snackbarMessage: '',\n      snackbarOpenState: false,\n      deleteSkillDialogState: false,\n      deleteSkillEntity: undefined,\n      attestatorEmail: ''\n    };\n  }\n  componentDidMount = () => {\n    // this.props.dispatch(load3BoxAttestations());\n  }\n  static getDerivedStateFromProps(props, state) {\n\n    if (state.propsSkills !== props.profile3Box.skills) {\n      state.skills = props.profile3Box.skills;\n      state.propsSkills = props.profile3Box.skill;\n    }\n    return state;\n  }\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  openSnackbar = message => {\n    this.setState({ snackbarMessage: message, snackbarOpenState: true });\n  }\n  closeSnackbar = () => {\n    this.setState({ snackbarMessage: '', snackbarOpenState: false });\n  }\n  addAttestor = async () => {\n    let { pendingAttestations } = this.props.profile3Box;\n    let newPendingAttestations = _.cloneDeep(pendingAttestations);\n\n    const pendingAttestation = await addPendingAttestation(\n      this.props.profile3Box.address,\n      this.props.profile3Box.name,\n      this.props.profile3Box.email,\n      this.state.attestatorEmail,\n      this.props.skill.name,\n      this.props.skill.timeStamp,\n      this.props.skill.signature,\n    );\n\n    if (!newPendingAttestations[this.props.skill.name]) {\n      newPendingAttestations[this.props.skill.name] = [];\n    }\n\n    newPendingAttestations[this.props.skill.name].push(pendingAttestation);\n    this.props.dispatch(update3BoxPendingAttestations(newPendingAttestations));\n    this.openSnackbar(`Attestation request sent to ${this.state.attestatorEmail}`);\n    this.setState({ attestatorEmail: '' });\n  }\n  render() {\n    const { classes, is3BoxLoaded } = this.props;\n    if (!is3BoxLoaded) {\n      return (\n        null\n      );\n    }\n    // let skillAttestations = this.props.profile3Box.attestations[]\n    return (\n      <React.Fragment>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbarOpenState}\n          autoHideDuration={4000}\n          onClose={this.closeSnackbar}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              // color=\"inherit\"\n              className={classes.close}\n              onClick={this.closeSnackbar}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n        {/* <Paper className={classes.root}> */}\n        <div className={classes.mainContainer}>\n          {/* <Typography variant=\"headline\">{this.props.skill.name}</Typography>\n          <Typography variant=\"caption\" gutterBottom>Created {moment(this.props.skill.timeStamp).fromNow()}</Typography> */}\n          <Typography variant=\"subheading\" gutterBottom>Request Attestation</Typography>\n          <div className={classes.requestAttestationContainer}>\n            <TextField\n              autoFocus\n              // margin=\"dense\"\n              id=\"request-email\"\n              label=\"Attestator Email\"\n              type=\"email\"\n              width={400}\n              className={classes.requestAttestationEmail}\n              value={this.state.attestatorEmail}\n              onChange={this.handleChange('attestatorEmail')}\n            />\n            <Button variant=\"fab\" mini color=\"primary\" aria-label=\"Add\" className={classes.button} disabled={this.state.attestatorEmail === ''}\n              onClick={this.addAttestor}>\n              <SendIcon />\n            </Button>\n          </div>\n          {/* <Typography variant=\"subheading\" gutterBottom>Pending Attestations Resquests</Typography> */}\n\n\n\n          {/* <Typography variant=\"subheading\">Who Attested me?</Typography> */}\n        </div>\n        {/* <Table className={classnames(classes.table, classes.root)}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Skill</TableCell>\n              <TableCell>Date Added</TableCell>\n              <TableCell># of attestations</TableCell>\n              <TableCell></TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.skills.map(skill => {\n              return (\n                <TableRow key={skill.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {skill.name}\n                  </TableCell>\n                  <TableCell>{moment(skill.timeStamp).fromNow()}</TableCell>\n                  <TableCell>??/??</TableCell>\n                  <TableCell>\n                    <Tooltip title=\"Request Attestations\">\n                      <IconButton\n                        color=\"primary\"\n                        className={classes.button}\n                        aria-label=\"Request Attestations\"\n                        onClick={this.openSkill(skill)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete Skill\">\n                      <IconButton\n                        color=\"primary\"\n                        className={classes.button}\n                        aria-label=\"Delete Skill\"\n                        onClick={this.openDeleteDialog(skill)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table> */}\n\n        {/* <Tooltip title=\"Add Skill\">\n          <Button variant=\"fab\" color=\"primary\" aria-label=\"Add\" className={classes.addSkillButton} onClick={this.openAddSkillDialog}>\n            <AddIcon />\n          </Button>\n        </Tooltip> */}\n        {/* </div>\n        </div > */}\n      </React.Fragment >\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    web3Address: web3Selectors.getSelectedAccount(state),\n    web3Provider: web3Selectors.getWeb3Provider(state),\n    is3BoxLoaded: profile3BoxSelectors.is3BoxLoaded(state),\n    profile3Box: profile3BoxSelectors.get3BoxProfile(state)\n  };\n}\n\nOpenSkill.propTypes = {\n  classes: PropTypes.object.isRequired,\n  skill: PropTypes.object.isRequired\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(OpenSkill)));\n\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport * as web3Selectors from '../store/web3/reducer';\nimport * as profile3BoxSelectors from '../store/3box/reducer';\nimport { update3BoxSkills } from '../store/3box/actions';\nimport TextField from '@material-ui/core/TextField';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport moment from 'moment-timezone';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport _ from 'lodash'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { signMessage } from '../helpers/utils';\nimport classnames from 'classnames';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenSkill from './OpenSkill';\n\nconst styles = theme => ({\n  centerContainer: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n  },\n  textField: {\n    width: '100%'\n  },\n  profileValue: {\n    color: theme.palette.text.secondary,\n    paddingLeft: theme.spacing.unit,\n  },\n  rightContainer: {\n    textAlign: 'right'\n  },\n  avatarContainer: {\n    display: 'flex',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n\n  },\n  dividerContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 180,\n  },\n  mySkillsContainer: {\n    position: 'relative',\n  },\n  addSkillButton: {\n    position: 'absolute',\n    top: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  containerWhite: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  containerPadding: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n  },\n  addressContainer: {\n    width: 300\n  },\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 640,\n  },\n  openSkillContainer: {\n    padding: 0\n  },\n  skillDialog: {\n    width: 640\n  }\n\n});\n\n\nclass MySkills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: '',\n      propsSkills: '',\n      addSkillName: '',\n      addSkillDialogState: false,\n      addSkillError: false,\n      snackbarMessage: '',\n      snackbarOpenState: false,\n      deleteSkillDialogState: false,\n      deleteSkillEntity: undefined,\n      openSkillDialogState: false,\n      skillOpened: undefined, // { name: \"test\", timeStamp: 123456789 }\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n\n    if (state.propsSkills !== props.profile3Box.skills) {\n      state.skills = props.profile3Box.skills;\n      state.propsSkills = props.profile3Box.skill;\n    }\n    return state;\n  }\n\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  addSkill = async () => {\n    const { skills, addSkillName } = this.state;\n    const foundIndex = skills.findIndex((skill) => { return skill.name === addSkillName });\n    // debugger;\n    if (foundIndex !== -1) {\n      this.openSnackbar(`Skill ${addSkillName} already exists`);\n      this.setState({ addSkillError: true });\n      return;\n    }\n\n    const timeStamp = new Date().getTime();\n    const message = `Skill:'${addSkillName}':Timestamp:'${timeStamp}'`;\n    let signature = '';\n    try {\n      signature = await signMessage(this.props.web3Address, message);\n    }\n    catch (error) {\n      return;\n    }\n    let newSkills = _.clone(skills);\n    newSkills.push({ name: addSkillName, timeStamp: moment().valueOf(), message, signature });\n    this.setState({\n      skills: newSkills,\n      addSkillDialogState: false,\n      addSkillName: ''\n    });\n    this.props.dispatch(update3BoxSkills(newSkills));\n    this.openSnackbar(`Skill ${addSkillName} added to your 3Box profile`);\n  }\n  openAddSkillDialog = () => {\n    this.setState({ addSkillDialogState: true });\n  }\n  closeAddSkillDialog = () => {\n    this.setState({ addSkillDialogState: false });\n  }\n  openSnackbar = message => {\n    this.setState({ snackbarMessage: message, snackbarOpenState: true });\n  }\n  closeSnackbar = () => {\n    this.setState({ snackbarMessage: '', snackbarOpenState: false });\n  }\n\n  openDeleteDialog = skill => () => {\n    this.setState({ deleteSkillDialogState: true, deleteSkillEntity: skill });\n  }\n  closeDeleteDialog = () => {\n    this.setState({ deleteSkillDialogState: false, deleteSkillEntity: undefined });\n  }\n  openSkillDialog = skill => () => {\n    this.setState({ openSkillDialogState: true, skillOpened: skill });\n  }\n  closeSkillDialog = () => {\n    this.setState({ openSkillDialogState: false, skillOpened: undefined });\n  }\n  deleteSkill = () => {\n    let { skills, deleteSkillEntity } = this.state;\n    const foundIndex = skills.findIndex((skill) => { return deleteSkillEntity.name === skill.name });\n    if (foundIndex !== -1) {\n      let newSkills = _.clone(skills);\n      newSkills.splice(foundIndex, 1);\n      this.props.dispatch(update3BoxSkills(newSkills));\n      // let newAttestations = _.cloneDeep(this.props.profile3Box.attestations);\n\n      // const foundIndexAttestation = newAttestations.findIndex((skill) => { return deleteSkillEntity.name === skill.name });\n\n      this.setState({\n        deleteSkillDialogState: false,\n        deleteSkillEntity: undefined,\n      })\n      this.openSnackbar(`Skill ${deleteSkillEntity.name} deleted from your 3Box profile`);\n    }\n  }\n  render() {\n    const { classes, is3BoxLoaded } = this.props;\n    if (!is3BoxLoaded) {\n      return (\n        null\n      );\n    }\n    let deletedSkillName = this.state.deleteSkillEntity ? this.state.deleteSkillEntity.name : '';\n    let skillOpenedName = this.state.skillOpened ? this.state.skillOpened.name : '';\n    let skillOpenedTimeStamp = this.state.skillOpened ? moment(this.state.skillOpened.timeStamp).fromNow() : '';\n    let attestations = this.props.profile3Box.attestations;\n    return (\n      <React.Fragment>\n        <div className={classnames(classes.containerWhite)}>\n          <div className={classes.mySkillsContainer}>\n            <Dialog\n              open={this.state.addSkillDialogState}\n              onClose={this.closeAddSkillDialog}\n              aria-labelledby=\"form-dialog-title\"\n            >\n              <DialogTitle id=\"form-dialog-title\">Add new skill to your profile</DialogTitle>\n              <DialogContent>\n                <TextField\n                  error={this.state.addSkillError}\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"add-skill\"\n                  label=\"Skill\"\n                  type=\"text\"\n                  fullWidth\n                  value={this.state.addSkillName}\n                  onChange={this.handleChange('addSkillName')}\n                />\n                <Typography variant=\"caption\">You will need to sign a message with your wallet</Typography>\n\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.closeAddSkillDialog} variant=\"outlined\" color=\"primary\">\n                  Cancel\n            </Button>\n                <Button onClick={this.addSkill} variant=\"raised\" color=\"primary\">\n                  Add\n            </Button>\n              </DialogActions>\n            </Dialog>\n            <Dialog\n              open={this.state.deleteSkillDialogState}\n              onClose={this.closeDeleteDialog}\n              aria-labelledby=\"form-dialog-delete-title\"\n            >\n              <DialogTitle id=\"form-dialog-delete-title\">Do you want to delete this skill?</DialogTitle>\n              <DialogContent>\n                <Typography variant=\"caption\" gutterbottom >The skill {deletedSkillName} is going to be deleted as well as the attestations associated to this skill.</Typography>\n                <Typography variant=\"caption\">Are you sure you want to proceed?</Typography>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.closeAddSkillDialog} variant=\"outlined\" color=\"primary\">\n                  Cancel\n            </Button>\n                <Button onClick={this.deleteSkill} variant=\"raised\" color=\"primary\">\n                  Delete\n            </Button>\n              </DialogActions>\n            </Dialog>\n            <Dialog\n              open={this.state.openSkillDialogState}\n              onClose={this.closeSkillDialog}\n              aria-labelledby=\"form-dialog-delete-title\"\n            >\n\n              {/* <DialogTitle id=\"form-dialog-delete-title\">{skillOpenedName}</DialogTitle> */}\n              <DialogContent className={classnames(classes.containerPadding, classes.skillDialog)}>\n                <Typography variant=\"headline\">Skill: {skillOpenedName}</Typography>\n                <Typography variant=\"caption\">{skillOpenedTimeStamp}</Typography>\n                <OpenSkill skill={this.state.skillOpened} />\n              </DialogContent>\n            </Dialog>\n            <Snackbar\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              open={this.state.snackbarOpenState}\n              autoHideDuration={4000}\n              onClose={this.closeSnackbar}\n              ContentProps={{\n                'aria-describedby': 'message-id',\n              }}\n              message={<span id=\"message-id\">{this.state.snackbarMessage}</span>}\n              action={[\n                <IconButton\n                  key=\"close\"\n                  aria-label=\"Close\"\n                  // color=\"inherit\"\n                  className={classes.close}\n                  onClick={this.closeSnackbar}\n                >\n                  <CloseIcon />\n                </IconButton>,\n              ]}\n            />\n            {/* <Paper className={classes.root}> */}\n            <Typography variant=\"headline\" gutterBottom className={classes.containerPadding}>My Skills</Typography>\n\n            <Table className={classnames(classes.table, classes.root)}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Skill</TableCell>\n                  <TableCell>Added</TableCell>\n                  <TableCell># of attestations</TableCell>\n                  <TableCell></TableCell>\n\n                </TableRow>\n              </TableHead>\n              <TableBody>\n\n                {this.state.skills.map(skill => {\n                  let numAttestations = attestations[skill.name] ? Object.keys(attestations[skill.name]).length : 0;\n                  return (\n                    <TableRow key={skill.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {skill.name}\n                      </TableCell>\n                      <TableCell>{moment(skill.timeStamp).fromNow()}</TableCell>\n                      <TableCell>{numAttestations}</TableCell>\n                      <TableCell>\n                        <Tooltip title=\"Request Attestations\">\n                          <IconButton\n                            color=\"primary\"\n                            // className={classes.button}\n                            aria-label=\"Request Attestations\"\n                            onClick={this.openSkillDialog(skill)}\n                          >\n                            <ShareIcon />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Delete Skill\">\n                          <IconButton\n                            color=\"primary\"\n                            // className={classes.button}\n                            aria-label=\"Delete Skill\"\n                            onClick={this.openDeleteDialog(skill)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n            {/* </Paper> */}\n\n            <Tooltip title=\"Add Skill\">\n              <Button variant=\"fab\" color=\"primary\" aria-label=\"Add\" className={classes.addSkillButton} onClick={this.openAddSkillDialog}>\n                <AddIcon />\n              </Button>\n            </Tooltip>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    web3Address: web3Selectors.getSelectedAccount(state),\n    web3Provider: web3Selectors.getWeb3Provider(state),\n    is3BoxLoaded: profile3BoxSelectors.is3BoxLoaded(state),\n    profile3Box: profile3BoxSelectors.get3BoxProfile(state)\n  };\n}\n\nMySkills.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(MySkills)));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { initWeb3 } from '../store/web3/actions';\n\nimport * as web3Selectors from '../store/web3/reducer';\nimport * as profile3BoxSelectors from '../store/3box/reducer';\nimport { load3box, update3BoxProfile } from '../store/3box/actions';\nimport TextField from '@material-ui/core/TextField';\nimport IpfsUpload from './ipfs/ipfs-upload/IpfsUpload';\nimport Avatar from '@material-ui/core/Avatar';\nimport classnames from 'classnames';\nimport Grid from '@material-ui/core/Grid';\nimport MySkills from './MySkills';\n\nconst styles = theme => ({\n  centerContainer: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n  },\n  textField: {\n    width: '100%'\n  },\n  profileValue: {\n    color: theme.palette.text.secondary,\n    paddingLeft: theme.spacing.unit,\n  },\n  rightContainer: {\n    textAlign: 'right'\n  },\n  avatarContainer: {\n    display: 'flex',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n\n  },\n  dividerContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 180,\n  },\n  mySkillsContainer: {\n    position: 'relative',\n  },\n  addSkillButton: {\n    position: 'absolute',\n    top: theme.spacing.unit * 1,\n    right: theme.spacing.unit * 1,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  containerWhite: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  containerPadding: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n  },\n  addressContainer: {\n    width: 300\n  }\n});\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      avatar: '',\n      propsName: '',\n      propsEmail: '',\n      propsAvatar: '',\n    };\n  }\n  componentDidMount = () => {\n    this.props.dispatch(initWeb3());\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.propsName !== props.profile3Box.name) {\n      state.name = props.profile3Box.name;\n      state.propsName = props.profile3Box.name;\n    }\n    if (state.propsEmail !== props.profile3Box.email) {\n      state.email = props.profile3Box.email;\n      state.propsEmail = props.profile3Box.email;\n    }\n    if (state.propsAvatar !== props.profile3Box.avatar) {\n      state.avatar = props.profile3Box.avatar;\n      state.propsAvatar = props.profile3Box.avatar;\n    }\n    return state;\n  }\n  load3Box = () => {\n    this.props.dispatch(load3box(this.props.web3Address));\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  handleAvatarUploaded = (url, hash) => {\n    this.setState({\n      avatar: url\n    });\n  }\n\n  update3BoxProfile = () => {\n    const { name, email, avatar } = this.state;\n\n    this.props.dispatch(update3BoxProfile(name, email, avatar));\n  }\n\n  render() {\n    const { classes, web3Address, is3BoxLoaded } = this.props;\n    let hasChanged = this.state.name !== this.props.profile3Box.name || this.state.email !== this.props.profile3Box.email || this.state.avatar !== this.props.profile3Box.avatar;\n    const avatar = this.state.avatar !== '' ? this.state.avatar : '/assets/no-avatar2.svg';\n    // if (this.props.is3BoxLoaded) debugger;\n    if (!is3BoxLoaded) {\n      return (\n        <React.Fragment>\n          <div className={classnames(classes.containerWhite, classes.containerPadding)}>\n\n            <Typography variant=\"headline\" gutterBottom>Ethereum Profile</Typography>\n            <Typography gutterBottom>Address: <span className={classes.profileValue}>{web3Address}</span></Typography>\n            <div className={classes.centerContainer}>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.load3Box} disabled={web3Address === '' || web3Address === undefined}> Load 3Box Profile</Button>\n            </div>\n          </div>\n        </React.Fragment >\n      );\n    }\n    return (\n      <div>\n        <div className={classnames(classes.containerWhite, classes.containerPadding)}>\n          <Grid container justify=\"space-between\">\n            <Grid item>\n              <Typography variant=\"headline\" gutterBottom>Ethereum Profile</Typography>\n              <Typography gutterBottom className={classes.addressContainer}>Address: <span className={classes.profileValue}>{web3Address}</span></Typography>\n            </Grid>\n            <Grid item>\n              {/* <div className={classes.avatarContainer}> */}\n              <Avatar\n                alt={this.state.name}\n                src={avatar}\n                className={classes.avatar}\n              />\n              <IpfsUpload fileUploadedCB={this.handleAvatarUploaded} caption=\"Edit\" />\n              {/* </div> */}\n            </Grid>\n          </Grid>\n          <form className={classes.container} noValidate autoComplete=\"off\">\n\n            <TextField\n              id=\"profile-name\"\n              label=\"Name\"\n              value={this.state.name}\n              onChange={this.handleChange('name')}\n              margin=\"normal\"\n              variant=\"outlined\"\n              // placeholder=\"Name\"\n              className={classes.textField}\n            />\n            <TextField\n              id=\"profile-email\"\n              label=\"Email\"\n              value={this.state.email}\n              onChange={this.handleChange('email')}\n              margin=\"normal\"\n              variant=\"outlined\"\n              // placeholder=\"Name\"\n              className={classes.textField}\n            />\n\n            <div className={classes.centerContainer}>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.update3BoxProfile} disabled={!hasChanged}> Update 3Box Profile</Button>\n            </div>\n          </form>\n        </div>\n        <MySkills />\n      </div >\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    web3Address: web3Selectors.getSelectedAccount(state),\n    web3Provider: web3Selectors.getWeb3Provider(state),\n    is3BoxLoaded: profile3BoxSelectors.is3BoxLoaded(state),\n    profile3Box: profile3BoxSelectors.get3BoxProfile(state)\n  };\n}\n\nProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(Profile)));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport { CircularProgress } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nconst styles = theme => ({\n  container: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 4,\n  }\n});\n\nclass LoadingDialog extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog\n        open={true}\n        aria-labelledby=\"loading-dialog-title\"\n        aria-describedby=\"loading-dialog-description\"\n        disableBackdropClick\n        disableEscapeKeyDown\n      >\n        {/* <DialogTitle id=\"loading-dialog-title\">Loading...</DialogTitle> */}\n        <DialogContent>\n          <div className={classes.container}>\n            <CircularProgress className={classes.progress} color=\"secondary\" />\n          </div>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n\n  };\n}\n\nLoadingDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(LoadingDialog));\n\n","import * as types from './actionTypes';\nimport Immutable from 'seamless-immutable';\n\n\nlet initialState = Immutable({\n    isLoading: false\n});\n\n\nexport default function reduce(state = initialState, action = {}) {\n    switch (action.type) {\n        case types.SET_LOADING:\n            return state.merge({\n                isLoading: true\n            });\n        case types.UNSET_LOADING:\n            return state.merge({\n                isLoading: false\n            });\n        default:\n            return state;\n    }\n}\n\n// selectors\n\nexport function isLoading(state) {\n    return state.globalApp.isLoading;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    mainContainer: {\n        maxWidth: 640,\n\n        [theme.breakpoints.down('sm')]: {\n            marginTop: theme.spacing.unit * (2),\n        },\n        [theme.breakpoints.up('md')]: {\n            marginTop: theme.spacing.unit * (2),\n        },\n        // marginTop: theme.spacing.unit * (8 + 5),\n        marginBottom: theme.spacing.unit * 3,\n        // marginLeft: theme.spacing.unit,\n        // marginRight: theme.spacing.unit,\n        // backgroundColor: \"white\",\n        // margin: '0 auto',\n        // minHeight: '100%',\n        // height: '100%',\n        // paddingTop: theme.spacing.unit * 3,\n        // paddingBottom: theme.spacing.unit * 3,\n        // paddingLeft: theme.spacing.unit * 3,\n        // paddingRight: theme.spacing.unit * 3,\n\n\n    },\n    footer: {\n        paddingBottom: theme.spacing.unit * 2,\n    },\n    greenText: {\n        color: theme.palette.primary.main\n    },\n\n});\n\nclass CenteredContainer extends Component {\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Grid container justify=\"center\" >\n\n                    <Grid item xs={12} className={classes.mainContainer}>\n                        {this.props.children}\n                    </Grid>\n                    <Grid item xs={12} className={classes.footer}>\n                        <Typography variant=\"caption\" align=\"center\" >#buidl with <span className={classes.greenText}>&hearts;</span> at ETHSanFrancisco</Typography>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n\n    };\n}\n\nCenteredContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(CenteredContainer));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { initWeb3 } from '../store/web3/actions';\n\nimport * as web3Selectors from '../store/web3/reducer';\nimport * as profile3BoxSelectors from '../store/3box/reducer';\nimport { load3box, update3BoxProfile, load3BoxPublicProfile } from '../store/3box/actions';\nimport { signMessage } from '../helpers/utils';\nimport classnames from 'classnames';\n\nimport { addApprovedAttestation } from '../modules/firebase';\nimport routes from '../routes';\n\nconst styles = theme => ({\n  centerContainer: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n  },\n  textField: {\n    width: '100%'\n  },\n  profileValue: {\n    color: theme.palette.text.secondary,\n    paddingLeft: theme.spacing.unit,\n  },\n  rightContainer: {\n    textAlign: 'right'\n  },\n  avatarContainer: {\n    display: 'flex',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n\n  },\n  dividerContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 180,\n  },\n  mySkillsContainer: {\n    position: 'relative',\n  },\n  addSkillButton: {\n    position: 'absolute',\n    top: theme.spacing.unit * 1,\n    right: theme.spacing.unit * 1,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  containerWhite: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  containerPadding: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n  },\n  addressContainer: {\n    width: 300\n  },\n  textSecondary: {\n    color: theme.palette.text.secondary\n  },\n  wrap: {\n    wordWrap: 'break-word'\n  },\n});\n\nclass Attest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      avatar: '',\n      propsName: '',\n      propsEmail: '',\n      propsAvatar: '',\n      isCompleted: false\n    };\n  }\n  componentDidMount = () => {\n    const { requestorAddress } = this.props.match.params;\n\n    this.props.dispatch(initWeb3());\n    this.props.dispatch(load3BoxPublicProfile(requestorAddress));\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.propsName !== props.profile3Box.name) {\n      state.name = props.profile3Box.name;\n      state.propsName = props.profile3Box.name;\n    }\n    if (state.propsEmail !== props.profile3Box.email) {\n      state.email = props.profile3Box.email;\n      state.propsEmail = props.profile3Box.email;\n    }\n    if (state.propsAvatar !== props.profile3Box.avatar) {\n      state.avatar = props.profile3Box.avatar;\n      state.propsAvatar = props.profile3Box.avatar;\n    }\n    return state;\n  }\n  load3Box = () => {\n    this.props.dispatch(load3box(this.props.web3Address));\n  }\n  update3BoxProfile = () => {\n    const { name, email, avatar } = this.state;\n\n    this.props.dispatch(update3BoxProfile(name, email, avatar));\n  }\n  approveAttestation = async () => {\n    const { requestorAddress, skillName, skillTimeStamp, requestorEmail } = this.props.match.params;\n    const timeStamp = new Date().getTime();\n\n    const message = `I attest that user ${this.props.publicProfile.name} (${requestorAddress}) has the following skill: ${skillName} (${skillTimeStamp}). Generated at ${timeStamp}`\n    const signature = await signMessage(this.props.web3Address, message);\n    let requesterName = this.props.publicProfile.name;\n    await addApprovedAttestation(skillName, skillTimeStamp, this.props.profile3Box.name, this.props.web3Address, requestorAddress, decodeURIComponent(requestorEmail), timeStamp, signature, requesterName);\n    this.setState({ isCompleted: true });\n\n  }\n  render() {\n    const { requestorAddress, skillName, skillSignature, requestorEmail } = this.props.match.params;\n\n    const { classes, web3Address, is3BoxLoaded } = this.props;\n    return (\n      <React.Fragment>\n        <div className={classnames(classes.containerWhite, classes.containerPadding)}>\n          <Typography variant=\"headline\" gutterBottom>You have been asked to send an attestation!</Typography>\n          <Typography variant=\"subheading\" >Requestor Name: <span className={classes.textSecondary}>{this.props.publicProfile.name}</span></Typography>\n          <Typography variant=\"subheading\" >Requestor Email: <span className={classes.textSecondary}>{decodeURIComponent(requestorEmail)}</span></Typography>\n          <Typography variant=\"subheading\" gutterBottom>Requestor Address: <span className={classes.textSecondary}>{requestorAddress}</span></Typography>\n          <Typography variant=\"subheading\" >Skill: <span className={classes.textSecondary}>{skillName}</span></Typography>\n          {/* <Typography variant=\"subheading\" >Created: <span className={classes.textSecondary}>{moment(skillTimeStamp).fromNow()}</span></Typography> */}\n          <Typography variant=\"subheading\" gutterBottom>Skill Signature: <span className={classnames(classes.textSecondary, classes.wrap)}>{skillSignature}</span></Typography>\n\n          <Typography variant=\"subheading\">Your Address: <span className={classes.profileValue}>{web3Address}</span></Typography>\n          {!is3BoxLoaded && web3Address !== requestorAddress && (\n            <div className={classes.centerContainer}>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.load3Box} disabled={web3Address === ''}>Load 3Box Profile</Button>\n            </div>\n          )}\n\n          {is3BoxLoaded && (\n            <React.Fragment>\n\n              {this.props.profile3Box.name !== '' && (<Typography variant=\"subheading\" >Your 3Box Name: <span className={classes.textSecondary}>{this.props.profile3Box.name}</span></Typography>)}\n              {this.props.profile3Box.name === '' && (<Typography variant=\"subheading\" >Your 3Box Name: <a href={routes.PROFILE()}>Create your profile</a></Typography>)}\n\n\n              {!this.state.isCompleted && (\n                <div className={classes.centerContainer}>\n                  <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.approveAttestation} disabled={web3Address === ''}>Approve Attestation</Button>\n                </div>\n              )}\n              {this.state.isCompleted && (\n                <Typography variant=\"subheading\" align=\"center\">Attestation sent!</Typography>\n              )}\n            </React.Fragment >\n\n          )}\n        </div>\n      </React.Fragment >\n    );\n    // return (\n    //   <div>\n    //     <div className={classnames(classes.containerWhite, classes.containerPadding)}>\n    //       <Typography variant=\"subheading\" gutterBottom>You have been asked to send an attestation!</Typography>\n\n\n    //       <Grid container justify=\"space-between\">\n    //         <Grid item>\n    //           <Typography variant=\"headline\" gutterBottom>Your Ethereum Profile</Typography>\n    //           <Typography gutterBottom noWrap className={classes.addressContainer}>Address: <span className={classes.profileValue}>{web3Address}</span></Typography>\n    //         </Grid>\n    //         <Grid item>\n    //           <Avatar\n    //             alt={this.state.name}\n    //             src={avatar}\n    //             className={classes.avatar}\n    //           />\n    //           <IpfsUpload fileUploadedCB={this.handleAvatarUploaded} caption=\"Edit\" />\n    //         </Grid>\n    //       </Grid>\n    //       <form className={classes.container} noValidate autoComplete=\"off\">\n\n    //         <TextField\n    //           id=\"profile-name\"\n    //           label=\"Name\"\n    //           value={this.state.name}\n    //           onChange={this.handleChange('name')}\n    //           margin=\"normal\"\n    //           variant=\"outlined\"\n    //           // placeholder=\"Name\"\n    //           className={classes.textField}\n    //         />\n    //         <TextField\n    //           id=\"profile-email\"\n    //           label=\"Email\"\n    //           value={this.state.email}\n    //           onChange={this.handleChange('email')}\n    //           margin=\"normal\"\n    //           variant=\"outlined\"\n    //           // placeholder=\"Name\"\n    //           className={classes.textField}\n    //         />\n\n    //         <div className={classes.centerContainer}>\n    //           <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.update3BoxProfile} disabled={!hasChanged}> Update 3Box Profile</Button>\n    //         </div>\n    //       </form>\n    //     </div>\n    //     <MySkills />\n    //   </div >\n    // )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    web3Address: web3Selectors.getSelectedAccount(state),\n    web3Provider: web3Selectors.getWeb3Provider(state),\n    is3BoxLoaded: profile3BoxSelectors.is3BoxLoaded(state),\n    profile3Box: profile3BoxSelectors.get3BoxProfile(state),\n    publicProfile: profile3BoxSelectors.get3BoxPublicProfile(state)\n  };\n}\n\nAttest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(Attest)));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { initWeb3 } from '../store/web3/actions';\n\nimport * as web3Selectors from '../store/web3/reducer';\nimport * as profile3BoxSelectors from '../store/3box/reducer';\nimport { load3box, update3BoxProfile, load3BoxPublicProfile, update3BoxAttestations } from '../store/3box/actions';\nimport _ from 'lodash'\nimport classnames from 'classnames';\nimport routes from '../routes';\nconst styles = theme => ({\n  centerContainer: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n  },\n  textField: {\n    width: '100%'\n  },\n  profileValue: {\n    color: theme.palette.text.secondary,\n    paddingLeft: theme.spacing.unit,\n  },\n  rightContainer: {\n    textAlign: 'right'\n  },\n  avatarContainer: {\n    display: 'flex',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n\n  },\n  dividerContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 180,\n  },\n  mySkillsContainer: {\n    position: 'relative',\n  },\n  addSkillButton: {\n    position: 'absolute',\n    top: theme.spacing.unit * 1,\n    right: theme.spacing.unit * 1,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  containerWhite: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  containerPadding: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n  },\n  addressContainer: {\n    width: 300\n  },\n  textSecondary: {\n    color: theme.palette.text.secondary\n  },\n  wrap: {\n    wordWrap: 'break-word'\n  },\n  error: {\n    color: 'red'\n  }\n});\n\nclass AcceptAttestation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      avatar: '',\n      propsName: '',\n      propsEmail: '',\n      propsAvatar: '',\n      isCompleted: false,\n      isValidSignature: true,\n    };\n  }\n  componentDidMount = async () => {\n    const { attestorAddress } = this.props.match.params;\n\n    this.props.dispatch(initWeb3());\n    this.props.dispatch(load3BoxPublicProfile(attestorAddress));\n    const { requestorAddress, skillName, attestationSignature, requesterName, skillTimeStamp, timeStamp } = this.props.match.params;\n\n    const message = `I attest that user ${decodeURIComponent(requesterName)} (${requestorAddress}) has the following skill: ${skillName} (${skillTimeStamp}). Generated at ${timeStamp}`;\n    let isValidSignature = await web3Selectors.verifySigner(message, attestationSignature, attestorAddress);\n    // debugger;\n    this.setState({ isValidSignature });\n\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.propsName !== props.profile3Box.name) {\n      state.name = props.profile3Box.name;\n      state.propsName = props.profile3Box.name;\n    }\n    if (state.propsEmail !== props.profile3Box.email) {\n      state.email = props.profile3Box.email;\n      state.propsEmail = props.profile3Box.email;\n    }\n    if (state.propsAvatar !== props.profile3Box.avatar) {\n      state.avatar = props.profile3Box.avatar;\n      state.propsAvatar = props.profile3Box.avatar;\n    }\n    return state;\n  }\n  load3Box = () => {\n    this.props.dispatch(load3box(this.props.web3Address));\n  }\n  update3BoxProfile = () => {\n    const { name, email, avatar } = this.state;\n\n    this.props.dispatch(update3BoxProfile(name, email, avatar));\n  }\n  addAttestation = async () => {\n    const { skillName, skillTimeStamp, attestationSignature, attestorAddress } = this.props.match.params;\n    // const timeStamp = new Date().getTime();\n\n    let newAttestations = _.cloneDeep(this.props.profile3Box.attestations);\n    if (!newAttestations[skillName]) {\n      newAttestations[skillName] = {};\n    }\n    newAttestations[skillName][attestationSignature] = {\n      skillName,\n      skillTimeStamp,\n      attestorAddress,\n      acceptedDate: new Date().getTime()\n    }\n    this.props.dispatch(update3BoxAttestations(newAttestations));\n    this.setState({ isCompleted: true })\n  }\n  render() {\n    const { requestorAddress, skillName, attestationSignature, attestorAddress } = this.props.match.params;\n\n    const { classes, web3Address, is3BoxLoaded } = this.props;\n    let isValidSignature = this.state.isValidSignature;\n    console.log(\"valid:\" + isValidSignature);\n    return (\n      <React.Fragment>\n        <div className={classnames(classes.containerWhite, classes.containerPadding)}>\n          <Typography variant=\"headline\" gutterBottom>You have been attested!</Typography>\n          <Typography variant=\"subheading\" >Attestor Name: <span className={classes.textSecondary}>{this.props.publicProfile.name}</span></Typography>\n          <Typography variant=\"subheading\" >Attestor Address: <span className={classes.textSecondary}>{attestorAddress}</span></Typography>\n\n          <Typography variant=\"subheading\" >Skill: <span className={classes.textSecondary}>{skillName}</span></Typography>\n          {/* <Typography variant=\"subheading\" >Created: <span className={classes.textSecondary}>{moment(skillTimeStamp).fromNow()}</span></Typography> */}\n          <Typography variant=\"subheading\" gutterBottom>Attestation Signature: <span className={classnames(classes.textSecondary, classes.wrap)}>{attestationSignature}</span></Typography>\n\n          {!isValidSignature && (\n            <Typography align=\"center\" className={classes.error}>Signature not valid!!!</Typography>\n          )}\n\n          {isValidSignature && !is3BoxLoaded && web3Address === requestorAddress && (\n            <div className={classes.centerContainer}>\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.load3Box} disabled={web3Address === ''}>Load 3Box Profile</Button>\n            </div>\n          )}\n\n          {isValidSignature && is3BoxLoaded && (\n            <React.Fragment>\n\n              {this.props.profile3Box.name !== '' && (<Typography variant=\"subheading\" >Your 3Box Name: <span className={classes.textSecondary}>{this.props.profile3Box.name}</span></Typography>)}\n              {this.props.profile3Box.name === '' && (<Typography variant=\"subheading\" >Your 3Box Name: <a href={routes.PROFILE()}>Create your profile</a></Typography>)}\n\n\n              {!this.state.isCompleted && (\n                <div className={classes.centerContainer}>\n                  <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.addAttestation} disabled={web3Address === ''}>Add Attestation to 3Box Profile</Button>\n                </div>\n              )}\n              {this.state.isCompleted && (\n                <React.Fragment>\n                  <Typography variant=\"subheading\" align=\"center\">Attestation stored on 3Box!</Typography>\n                  <a href={routes.PUBLIC_PROFILE(web3Address)}>Open public profile</a>\n                </React.Fragment>\n              )}\n            </React.Fragment >\n\n          )}\n        </div>\n      </React.Fragment >\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    web3Address: web3Selectors.getSelectedAccount(state),\n    web3Provider: web3Selectors.getWeb3Provider(state),\n    is3BoxLoaded: profile3BoxSelectors.is3BoxLoaded(state),\n    profile3Box: profile3BoxSelectors.get3BoxProfile(state),\n    publicProfile: profile3BoxSelectors.get3BoxPublicProfile(state)\n  };\n}\n\nAcceptAttestation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(AcceptAttestation)));\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { initWeb3 } from '../store/web3/actions';\nimport classnames from 'classnames';\n\nimport * as web3Selectors from '../store/web3/reducer';\nimport * as profile3BoxSelectors from '../store/3box/reducer';\nimport { load3box, update3BoxProfile, load3BoxPublicProfile } from '../store/3box/actions';\nconst styles = theme => ({\n  centerContainer: {\n    textAlign: 'center',\n    padding: theme.spacing.unit * 3,\n  },\n  button: {\n  },\n  textField: {\n    width: '100%'\n  },\n  profileValue: {\n    color: theme.palette.text.secondary,\n    paddingLeft: theme.spacing.unit,\n  },\n  rightContainer: {\n    textAlign: 'right'\n  },\n  avatarContainer: {\n    display: 'flex',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n\n  },\n  dividerContainer: {\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 180,\n  },\n  mySkillsContainer: {\n    position: 'relative',\n  },\n  addSkillButton: {\n    position: 'absolute',\n    top: theme.spacing.unit * 1,\n    right: theme.spacing.unit * 1,\n  },\n  close: {\n    padding: theme.spacing.unit / 2,\n  },\n  containerWhite: {\n    backgroundColor: 'white',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  containerPadding: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n  },\n  addressContainer: {\n    width: 300\n  },\n  textSecondary: {\n    color: theme.palette.text.secondary\n  },\n  wrap: {\n    wordWrap: 'break-word'\n  },\n});\n\nclass AcceptAttestation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      avatar: '',\n      propsName: '',\n      propsEmail: '',\n      propsAvatar: '',\n      isCompleted: false\n    };\n  }\n  componentDidMount = () => {\n    const { address } = this.props.match.params;\n\n    this.props.dispatch(initWeb3());\n    this.props.dispatch(load3BoxPublicProfile(address));\n  }\n  static getDerivedStateFromProps(props, state) {\n    if (state.propsName !== props.profile3Box.name) {\n      state.name = props.profile3Box.name;\n      state.propsName = props.profile3Box.name;\n    }\n    if (state.propsEmail !== props.profile3Box.email) {\n      state.email = props.profile3Box.email;\n      state.propsEmail = props.profile3Box.email;\n    }\n    if (state.propsAvatar !== props.profile3Box.avatar) {\n      state.avatar = props.profile3Box.avatar;\n      state.propsAvatar = props.profile3Box.avatar;\n    }\n    return state;\n  }\n  load3Box = () => {\n    this.props.dispatch(load3box(this.props.web3Address));\n  }\n  update3BoxProfile = () => {\n    const { name, email, avatar } = this.state;\n\n    this.props.dispatch(update3BoxProfile(name, email, avatar));\n  }\n\n  render() {\n    const { address } = this.props.match.params;\n    const { name, attestations } = this.props.publicProfile;\n    if (!attestations) {\n      return null;\n    }\n    let skills = Object.keys(attestations);\n    const { classes } = this.props;\n    // const message = `I attest that user ${decodeURIComponent(requesterName)} (${requestorAddress}) has the following skill: ${skillName} (${skillTimeStamp}). Generated at ${timeStamp}`;\n    // let isValidSignature = web3Selectors.verifySigner(message, attestationSignature, attestorAddress);\n    return (\n      <React.Fragment>\n        <div className={classnames(classes.containerWhite, classes.containerPadding)}>\n          <Typography variant=\"headline\" gutterBottom align=\"center\">Public Profile</Typography>\n\n          <Typography variant=\"subheading\" >Name: <span className={classes.textSecondary}>{name}</span></Typography>\n          <Typography variant=\"subheading\" gutterBottom>Address: <span className={classes.textSecondary}>{address}</span></Typography>\n          {skills.map(skill => {\n            return (\n              <React.Fragment key={skill}>\n                <Typography variant=\"title\">{skill}</Typography>\n                <Typography variant=\"caption\">Attested by:</Typography>\n                {\n                  Object.values(attestations[skill]).map(attestation => {\n                    // debugger;\n                    return (\n                      <Typography variant=\"caption\" key={attestation.attestorAddress}>- {attestation.attestorAddress}</Typography>\n\n                    )\n                  })\n                }\n              </React.Fragment>\n            )\n          }\n          )}\n\n        </div>\n      </React.Fragment >\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    web3Address: web3Selectors.getSelectedAccount(state),\n    web3Provider: web3Selectors.getWeb3Provider(state),\n    is3BoxLoaded: profile3BoxSelectors.is3BoxLoaded(state),\n    profile3Box: profile3BoxSelectors.get3BoxProfile(state),\n    publicProfile: profile3BoxSelectors.get3BoxPublicProfile(state)\n  };\n}\n\nAcceptAttestation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(AcceptAttestation)));\n\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport routes from './routes';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Profile from './components/Profile';\nimport LoadingDialog from './components/LoadingDialog';\nimport * as globalAppSelectors from './store/global-app/reducer';\nimport CenteredContainer from './components/CenteredContainer';\nimport Attest from './components/Attest';\nimport AcceptAttestation from './components/AcceptAttestation';\nimport PublicProfile from './components/PublicProfile';\n\nconst styles = theme => ({\n  mainContainer: {\n    maxWidth: 640,\n    // backgroundColor: 'white',\n\n  }\n});\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiTableCell: {\n      root: {\n        padding: '4px 16px 4px 16px'\n      }\n    }\n  }\n});\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <BrowserRouter>\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n              {this.props.isLoading && <LoadingDialog />}\n\n              <Header />\n              <CenteredContainer>\n                <Route exact path={routes.HOME()} component={Profile} />\n                <Route exact path={routes.PROFILE()} component={Profile} />\n                <Route exact path={routes.ATTEST()} component={Attest} />\n                <Route exact path={routes.ACCEPT_ATTESTATION()} component={AcceptAttestation} />\n                <Route exact path={routes.PUBLIC_PROFILE()} component={PublicProfile} />\n\n              </CenteredContainer>\n            </div>\n          </MuiThemeProvider>\n        </BrowserRouter>\n      </React.Fragment >\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoading: globalAppSelectors.isLoading(state),\n  };\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport * as reducers from './store/reducers';\n\nconst initStore = (reducer, initialState) => {\n  if (typeof window === 'undefined') {\n    return createStore(combineReducers(reducers), composeWithDevTools(applyMiddleware(thunk)));\n  } else {\n    if (!window.store) {\n      window.store = createStore(combineReducers(reducers), composeWithDevTools(applyMiddleware(thunk)));\n    }\n    return window.store\n  }\n}\nconst store = initStore();\n\n\nReactDOM.render((\n  <Provider store={store}>\n    <App />\n  </Provider>\n),\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","export const signMessage = (userAddress, message) => {\n  var msg = '0x' + Buffer.from(message, 'utf8').toString('hex')\n  var params = [msg, userAddress]\n  var method = 'personal_sign'\n  return new Promise((resolve, reject) => {\n    window.web3.currentProvider.sendAsync({\n      method,\n      params,\n      userAddress\n    }, function (err, result) {\n      if (err) reject(err)\n      if (result.error) reject(result.error)\n      resolve(result.result)\n    })\n  })\n}\n","const IFPS_HOST = 'ipfs.infura.io';\nconst IPFS_PROTOCOL = 'https';\n\n//using the infura.io node, otherwise ipfs requires you to run a daemon on your own computer/server. See IPFS.io docs\n// const IPFS = require('ipfs-api');\n\n// const IPFS = require('ipfs-api/dist/index.min.js');\nconst IPFS = require('ipfs-api');\n\nexport const getIpfs = () => {\n    return new IPFS({ host: IFPS_HOST, port: 5001, protocol: IPFS_PROTOCOL });\n}\n\n//run with local daemon\n// const ipfsApi = require('ipfs-api');\n// const ipfs = new ipfsApi('localhost', '5001', {protocol: 'http'});\n\nexport const getIpfsUrl = (hash) => {\n    return IPFS_PROTOCOL + '://' + IFPS_HOST + '/ipfs/' + hash;\n}\n\nexport const uploadObjectIpfs = (obj) => {\n    return new Promise((resolve, reject) => {\n        \n        let ipfs = getIpfs();\n        var buffer = Buffer.from(JSON.stringify(obj));\n\n        //https://github.com/ipfs/interface-ipfs-core/blob/master/SPEC/FILES.md#add \n        ipfs.add(buffer, (err, ipfsHash) => {\n            if(err) {\n                reject(err);\n            }\n            else {\n                let hash = ipfsHash[0].hash;\n                let url = getIpfsUrl(hash);\n                resolve({hash, url});\n            }\n        \n            //setState by setting ipfsHash to ipfsHash[0].hash \n            \n        })\n    })\n\n    \n\n}"],"sourceRoot":""}